---
description:
globs:
alwaysApply: false
---
# Development Guidelines

## Coding Standards for Typing Rain

### JavaScript Best Practices
- **Use ES6+ features**: arrow functions, const/let, template literals
- **Maintain 60fps performance**: optimize canvas operations and minimize DOM manipulations
- **Event handling**: Use event delegation and proper cleanup
- **Error handling**: Implement try-catch for critical game functions

### CSS Guidelines
- **Use CSS custom properties** for consistent theming and easy maintenance
- **Maintain glassmorphism aesthetic** with backdrop-filter and opacity
- **Responsive approach**: Mobile-first design with desktop enhancements
- **Performance**: Use transform and opacity for animations (GPU acceleration)

### Canvas Optimization
- **Efficient rendering**: Clear only dirty rectangles when possible
- **Object pooling**: Reuse word objects to reduce garbage collection
- **Animation timing**: Use requestAnimationFrame for smooth 60fps
- **Layer separation**: Background effects vs. game objects

### SEO and Accessibility
- **Semantic HTML**: Proper heading hierarchy and ARIA labels
- **Meta tags**: Keep descriptions under 160 characters
- **Performance**: Optimize for Core Web Vitals (LCP, FID, CLS)
- **Keyboard navigation**: Ensure game is playable with keyboard only

### Game Design Principles
- **Progressive difficulty**: Gradually increase word complexity and speed
- **Clear feedback**: Visual and audio cues for successful/failed catches
- **Statistics tracking**: Accurate WPM and accuracy calculations
- **User engagement**: Satisfying animations and sound effects

## File Modification Guidelines
Since this is a single-file application in [index.html](mdc:index.html):
- **Test frequently**: Changes affect the entire application
- **Backup before major changes**: Use version control checkpoints
- **Section comments**: Clearly mark different functional areas
- **Minification consideration**: Keep code readable but consider production optimization
